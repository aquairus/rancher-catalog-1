.catalog:
  name: "LMA"
  version: "rancher-0.0.1"
  description: "Logging-Monitoring-Alerting"
  questions:
    - variable: "collector_inputs"
      description: |
        Logstash collection tier inputs. These will be added
        directly to input { } section of logstash.conf
      label: "Logstash inputs"
      type: "multiline"
      required: true
      default: |
        udp {
          port => 5000
          codec => "json"
        }
    - variable: "indexer_filters"
      description: |
        Logstash indexing tier filters. These will be added
        directly to filter { } section of logstash.conf
      label: "Logstash filters"
      type: "multiline"
      required: false
      default: ""
    - variable: "indexer_outputs"
      description: |
        Logstash indexing tier outputs. These will be added
        directly to output { } section of logstash.conf
      label: "Logstash outputs"
      type: "multiline"
      required: true
      default: |
        elasticsearch {
          hosts => ["elasticsearch.rancher.internal:9200"]
        }
        stdout {
          codec => rubydebug
        }
node-exporter:
  start_on_create: true
prom-conf:
  scale: 1
  start_on_create: true
elastalert:
  scale: 1
  start_on_create: true
elasticsearch:
  scale: 1
  start_on_create: true
grafana:
  scale: 1
  start_on_create: true
  health_check:
    healthy_threshold: 2
    response_timeout: 5000
    port: 3000
    unhealthy_threshold: 3
    interval: 5000
    strategy: recreate
cadvisor:
  start_on_create: true
kopf:
  scale: 1
  start_on_create: true
  health_check:
    healthy_threshold: 2
    response_timeout: 2000
    port: 80
    unhealthy_threshold: 3
    initializing_timeout: 60000
    interval: 2000
    strategy: recreate
    reinitializing_timeout: 60000
prometheus:
  scale: 1
  start_on_create: true
  health_check:
    healthy_threshold: 2
    response_timeout: 5000
    port: 9090
    unhealthy_threshold: 3
    interval: 5000
    strategy: recreate
graf-db:
  scale: 1
  start_on_create: true
kibana:
  scale: 1
  start_on_create: true
  health_check:
    healthy_threshold: 2
    response_timeout: 2000
    port: 5601
    unhealthy_threshold: 3
    initializing_timeout: 60000
    interval: 2000
    strategy: recreate
    request_line: GET "/" "HTTP/1.0"
    reinitializing_timeout: 60000
alertmanager:
  scale: 1
  start_on_create: true
  health_check:
    healthy_threshold: 2
    response_timeout: 2000
    port: 9093
    unhealthy_threshold: 3
    initializing_timeout: 60000
    interval: 2000
    strategy: recreate
    reinitializing_timeout: 60000
logstash-indexer:
  metadata:
    logstash:
      inputs: |
        redis {
          host => "redis.rancher.internal"
          port => "6379"
          data_type => "list"
          key => "logstash"
        }
    filters: |
      ${indexer_filters}
    outputs: |
      ${indexer_outputs}
logstash-collector:
  metadata:
    logstash:
      inputs: |
        ${collector_inputs}
      outputs: |
        redis {
          host => "redis.rancher.internal"
          port => "6379"
          data_type => "list"
          key => "logstash"
        }
